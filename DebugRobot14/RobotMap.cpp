/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SmartGyro* RobotMap::chasisgyro = NULL;
StallableAnalogEncoder* RobotMap::chasisbatteryCurrent = NULL;
StallableAnalogEncoder* RobotMap::chasistransducer = NULL;
SmartCANJaguar* RobotMap::driveTrainfrontLeft = NULL;
SmartCANJaguar* RobotMap::driveTrainfrontRight = NULL;
SmartCANJaguar* RobotMap::driveTrainrearLeft = NULL;
SmartCANJaguar* RobotMap::driveTrainrearRight = NULL;
RobotDrive* RobotMap::driveTrainRobotDrive = NULL;
Compressor* RobotMap::driveTrainarmCompressor = NULL;
Compressor* RobotMap::shiftershifterCompressor = NULL;
Relay* RobotMap::shiftervalve1 = NULL;
Relay* RobotMap::shiftervalve2 = NULL;
Encoder* RobotMap::shifterQuadratureEncoder1 = NULL;
Encoder* RobotMap::shifterQuadratureEncoder2 = NULL;
Encoder* RobotMap::shifterQuadratureEncoder3 = NULL;
Encoder* RobotMap::shifterQuadratureEncoder4 = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	chasisgyro = new SmartGyro(1, 1);
	lw->AddSensor("Chasis", "gyro", chasisgyro);
	chasisgyro->SetSensitivity(0.007);
	chasisbatteryCurrent = new StallableAnalogEncoder(1, 2);
	//lw->AddSensor("Chasis", "batteryCurrent", chasisbatteryCurrent);
	
	chasistransducer = new StallableAnalogEncoder(1, 3);
	//lw->AddSensor("Chasis", "transducer", chasistransducer);
	//lw->AddSensor("thing","lol",chasistransducer);
	
	driveTrainfrontLeft = new SmartCANJaguar(2);
	
	
	driveTrainfrontRight = new SmartCANJaguar(3);
	
	
	driveTrainrearLeft = new SmartCANJaguar(4);
	
	
	driveTrainrearRight = new SmartCANJaguar(5);
	
	
	driveTrainRobotDrive = new RobotDrive(driveTrainfrontLeft, driveTrainrearLeft,
              driveTrainfrontRight, driveTrainrearRight);
	
	driveTrainRobotDrive->SetSafetyEnabled(false);
        driveTrainRobotDrive->SetExpiration(0.1);
        driveTrainRobotDrive->SetSensitivity(0.5);
        driveTrainRobotDrive->SetMaxOutput(1.0);
	driveTrainarmCompressor = new Compressor(1, 1, 1, 1);
	
	
	shiftershifterCompressor = new Compressor(1, 9, 1, 4);
	
	
	shiftervalve1 = new Relay(1, 2);
	lw->AddActuator("Shifter", "valve1", shiftervalve1);
	
	shiftervalve2 = new Relay(1, 3);
	lw->AddActuator("Shifter", "valve2", shiftervalve2);
	
	shifterQuadratureEncoder1 = new Encoder(1, 2, 1, 3, false, Encoder::k4X);
	lw->AddSensor("Shifter", "Quadrature Encoder 1", shifterQuadratureEncoder1);
	shifterQuadratureEncoder1->SetDistancePerPulse(1.0);
        shifterQuadratureEncoder1->SetPIDSourceParameter(Encoder::kRate);
        shifterQuadratureEncoder1->Start();
	shifterQuadratureEncoder2 = new Encoder(1, 4, 1, 5, false, Encoder::k4X);
	lw->AddSensor("Shifter", "Quadrature Encoder 2", shifterQuadratureEncoder2);
	shifterQuadratureEncoder2->SetDistancePerPulse(1.0);
        shifterQuadratureEncoder2->SetPIDSourceParameter(Encoder::kRate);
        shifterQuadratureEncoder2->Start();
	shifterQuadratureEncoder3 = new Encoder(1, 6, 1, 7, false, Encoder::k4X);
	lw->AddSensor("Shifter", "Quadrature Encoder 3", shifterQuadratureEncoder3);
	shifterQuadratureEncoder3->SetDistancePerPulse(1.0);
        shifterQuadratureEncoder3->SetPIDSourceParameter(Encoder::kRate);
        shifterQuadratureEncoder3->Start();
	shifterQuadratureEncoder4 = new Encoder(1, 8, 1, 10, false, Encoder::k4X);
	lw->AddSensor("Shifter", "Quadrature Encoder 4", shifterQuadratureEncoder4);
	shifterQuadratureEncoder4->SetDistancePerPulse(1.0);
        shifterQuadratureEncoder4->SetPIDSourceParameter(Encoder::kRate);
        shifterQuadratureEncoder4->Start();
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
