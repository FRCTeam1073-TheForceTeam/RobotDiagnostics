/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
SmartGyro* RobotMap::chasisSmartGyro1 = NULL;
StallableAnalogEncoder* RobotMap::chasisbatteryCurrent = NULL;
StallableAnalogEncoder* RobotMap::chasisAnalogInput2 = NULL;
SmartCANJaguar* RobotMap::driveTrainfrontLeft = NULL;
SmartCANJaguar* RobotMap::driveTrainfrontRight = NULL;
SmartCANJaguar* RobotMap::driveTrainrearLeft = NULL;
SmartCANJaguar* RobotMap::driveTrainrearRight = NULL;
RobotDrive* RobotMap::driveTrainRobotDrive = NULL;
Encoder* RobotMap::driveTrainQuadratureEncoder1 = NULL;
Encoder* RobotMap::driveTrainQuadratureEncoder2 = NULL;
Encoder* RobotMap::driveTrainQuadratureEncoder3 = NULL;
Encoder* RobotMap::driveTrainQuadratureEncoder4 = NULL;
Relay* RobotMap::driveTrainSpike1 = NULL;
Relay* RobotMap::driveTrainRelaySolenoid1 = NULL;
Relay* RobotMap::driveTrainRelaySolenoid2 = NULL;
Relay* RobotMap::driveTrainRelaySolenoid3 = NULL;
Compressor* RobotMap::driveTrainCompressor1 = NULL;
DigitalInput* RobotMap::driveTrainDigitalInput1 = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	chasisSmartGyro1 = new SmartGyro(1, 1);
	lw->AddSensor("Chasis", "SmartGyro 1", chasisSmartGyro1);
	chasisSmartGyro1->SetSensitivity(0.007);
	chasisbatteryCurrent = new StallableAnalogEncoder(1, 2);
	//lw->AddSensor("Chasis", "batteryCurrent", chasisbatteryCurrent);
	
	chasisAnalogInput2 = new StallableAnalogEncoder(1, 3);
	//lw->AddSensor("Chasis", "Analog Input 2", chasisAnalogInput2);
	
	driveTrainfrontLeft = new SmartCANJaguar(2);
	
	
	driveTrainfrontRight = new SmartCANJaguar(3);
	
	
	driveTrainrearLeft = new SmartCANJaguar(4);
	
	
	driveTrainrearRight = new SmartCANJaguar(5);
	
	
	driveTrainRobotDrive = new RobotDrive(driveTrainfrontLeft, driveTrainrearLeft,
              driveTrainfrontRight, driveTrainrearRight);
	
	driveTrainRobotDrive->SetSafetyEnabled(false);
        driveTrainRobotDrive->SetExpiration(0.1);
        driveTrainRobotDrive->SetSensitivity(0.5);
        driveTrainRobotDrive->SetMaxOutput(1.0);
	driveTrainQuadratureEncoder1 = new Encoder(1, 1, 1, 2, false, Encoder::k4X);
	lw->AddSensor("Drive Train", "Quadrature Encoder 1", driveTrainQuadratureEncoder1);
	driveTrainQuadratureEncoder1->SetDistancePerPulse(1.0);
        driveTrainQuadratureEncoder1->SetPIDSourceParameter(Encoder::kRate);
        driveTrainQuadratureEncoder1->Start();
	driveTrainQuadratureEncoder2 = new Encoder(1, 3, 1, 4, false, Encoder::k4X);
	lw->AddSensor("Drive Train", "Quadrature Encoder 2", driveTrainQuadratureEncoder2);
	driveTrainQuadratureEncoder2->SetDistancePerPulse(1.0);
        driveTrainQuadratureEncoder2->SetPIDSourceParameter(Encoder::kRate);
        driveTrainQuadratureEncoder2->Start();
	driveTrainQuadratureEncoder3 = new Encoder(1, 5, 1, 6, false, Encoder::k4X);
	lw->AddSensor("Drive Train", "Quadrature Encoder 3", driveTrainQuadratureEncoder3);
	driveTrainQuadratureEncoder3->SetDistancePerPulse(1.0);
        driveTrainQuadratureEncoder3->SetPIDSourceParameter(Encoder::kRate);
        driveTrainQuadratureEncoder3->Start();
	driveTrainQuadratureEncoder4 = new Encoder(1, 7, 1, 8, false, Encoder::k4X);
	lw->AddSensor("Drive Train", "Quadrature Encoder 4", driveTrainQuadratureEncoder4);
	driveTrainQuadratureEncoder4->SetDistancePerPulse(1.0);
        driveTrainQuadratureEncoder4->SetPIDSourceParameter(Encoder::kRate);
        driveTrainQuadratureEncoder4->Start();
	driveTrainSpike1 = new Relay(1, 1);
	lw->AddActuator("Drive Train", "Spike 1", driveTrainSpike1);
	
	driveTrainRelaySolenoid1 = new Relay(1, 2);
	lw->AddActuator("Drive Train", "Relay Solenoid 1", driveTrainRelaySolenoid1);
	
	driveTrainRelaySolenoid2 = new Relay(1, 3);
	lw->AddActuator("Drive Train", "Relay Solenoid 2", driveTrainRelaySolenoid2);
	
	driveTrainRelaySolenoid3 = new Relay(1, 4);
	lw->AddActuator("Drive Train", "Relay Solenoid 3", driveTrainRelaySolenoid3);
	
	driveTrainCompressor1 = new Compressor(1, 9, 1, 6);
	
	
	driveTrainDigitalInput1 = new DigitalInput(1, 10);
	lw->AddSensor("Drive Train", "Digital Input 1", driveTrainDigitalInput1);
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
