/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/compressArm.h"
#include "Commands/compressShifter.h"
#include "Commands/deCompressArm.h"
#include "Commands/drive.h"
#include "Commands/driveArcarde.h"
#include "Commands/launch.h"
#include "Commands/sendData.h"
#include "Commands/shiftDown.h"
#include "Commands/shiftUp.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	joystick1 = new SmartJoystick(1);
	
	shiftDownButton = new JoystickButton(joystick1, 9);
	shiftDownButton->WhenPressed(new shiftDown());
	shiftUpButton = new JoystickButton(joystick1, 8);
	shiftUpButton->WhenPressed(new shiftUp());
	deCompressButton = new JoystickButton(joystick1, 7);
	deCompressButton->WhenPressed(new deCompressArm());
	launchBall = new JoystickButton(joystick1, 6);
	launchBall->WhenPressed(new launch());
	arcadeDrive = new JoystickButton(joystick1, 5);
	arcadeDrive->WhenPressed(new driveArcarde());
	mecanumdrive = new JoystickButton(joystick1, 4);
	mecanumdrive->WhenPressed(new drive());
	compressShifterButton = new JoystickButton(joystick1, 2);
	compressShifterButton->WhileHeld(new compressShifter());
	compressArmButton = new JoystickButton(joystick1, 1);
	compressArmButton->WhileHeld(new compressArm());
	sendDataButton = new JoystickButton(joystick1, 3);
	sendDataButton->WhenPressed(new sendData());
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
	SmartDashboard::PutData("compressArm", new compressArm());
	SmartDashboard::PutData("compressShifter", new compressShifter());
	SmartDashboard::PutData("deCompressArm", new deCompressArm());
	SmartDashboard::PutData("drive", new drive());
	SmartDashboard::PutData("driveArcarde", new driveArcarde());
	SmartDashboard::PutData("launch", new launch());
	SmartDashboard::PutData("sendData", new sendData());
	SmartDashboard::PutData("shiftDown", new shiftDown());
	SmartDashboard::PutData("shiftUp", new shiftUp());
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
SmartJoystick* OI::getJoystick1() {
	return joystick1;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
