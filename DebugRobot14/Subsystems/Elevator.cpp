/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "Elevator.h"
#include "../Robotmap.h"
Elevator::Elevator() : Subsystem("Elevator") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	angleAdjuster = RobotMap::elevatorAngleAdjuster;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	isAngleAdjusterReady=false;
	setValue = 0.6;//declare here what the value should be
}
    
void Elevator::InitDefaultCommand() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	angleAdjuster->Set(0.0);
}
void Elevator::autoDown(){
	angleAdjuster->Set(-setValue);
}
void Elevator::autoUp(){
	angleAdjuster->Set(setValue);
}
void Elevator::stopArm(){
	angleAdjuster->Set(0);
}
//This modified code allows the arm to have a error of +-0.1
//like before, but you now only have to change one value instaed to 5 or 6
void Elevator::autoStopArm(){
	float angleSpeed = angleAdjuster->Get();
	float lowLim = setValue-0.1;//set the low limit
	float highLim = setValue+0.1;//set the high limit
	if((-lowLim>angleSpeed)&&(angleSpeed>-highLim))//same math, but with the numbers being variables
			isAngleAdjusterReady=true;
	if((lowLim<angleSpeed)&&(angleSpeed<highLim)&&!isAngleAdjusterReady)
			isAngleAdjusterReady=true;
	angleAdjuster->Set(0);
}
