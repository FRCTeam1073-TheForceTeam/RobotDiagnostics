/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "ShifterSystem.h"
#include "../Robotmap.h"
#include "../Commands/compressShifter.h"
bool lowGear;
ShifterSystem::ShifterSystem() : Subsystem("ShifterSystem") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	shifterCompressor = RobotMap::shifterSystemShifterCompressor;
	shifterSolenoid = RobotMap::shifterSystemshifterSolenoid;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void ShifterSystem::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new compressShifter());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	shifterSolenoid->Set(DoubleSolenoid::kOff);
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
int ShifterSystem::GetGearSetting(){
	//printf("Getting Gear Setting...\n");
	if(shifterSolenoid->Get()==DoubleSolenoid::kForward){
		//printf("yes it is in low\n");
		return -1;
	}
	if(shifterSolenoid->Get()==DoubleSolenoid::kReverse){
		//printf("yes it is in high\n");
		return 1;
	}
	if(shifterSolenoid->Get()==DoubleSolenoid::kOff){
		//printf("yes it is off\n");
		return 0;
	}
	return 0;
}
void ShifterSystem::ShiftUp(){
	shifterSolenoid->Set(DoubleSolenoid::kReverse);
}
void ShifterSystem::ShiftDown(){
	shifterSolenoid->Set(DoubleSolenoid::kForward);
}
void ShifterSystem::Compress() {
	//armCompressor->CheckDigitalChannel(1);
	shifterCompressor->Start();
}
