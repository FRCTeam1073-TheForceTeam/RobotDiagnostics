/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "ShifterSystem.h"
#include "../Robotmap.h"
#include "../Commands/compressShifter.h"
bool lowGear;
ShifterSystem::ShifterSystem() : Subsystem("ShifterSystem") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	quadratureEncoder1 = RobotMap::shifterSystemQuadratureEncoder1;
	quadratureEncoder2 = RobotMap::shifterSystemQuadratureEncoder2;
	quadratureEncoder3 = RobotMap::shifterSystemQuadratureEncoder3;
	quadratureEncoder4 = RobotMap::shifterSystemQuadratureEncoder4;
	shifterCompressor = RobotMap::shifterSystemShifterCompressor;
	doubleSolenoid1 = RobotMap::shifterSystemDoubleSolenoid1;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void ShifterSystem::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new compressShifter());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	doubleSolenoid1->Set(DoubleSolenoid::kOff);
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void ShifterSystem::GetGearSetting(){
	printf("Getting Gear Setting...");
	if(doubleSolenoid1->Get()==DoubleSolenoid::kForward){
		printf("yes it is in foward");
	}
	if(doubleSolenoid1->Get()==DoubleSolenoid::kReverse){
		printf("yes it is in reverse");
	}
	if(doubleSolenoid1->Get()==DoubleSolenoid::kOff){
		printf("yes it is off");
	}
}
void ShifterSystem::ShiftUp(){
	doubleSolenoid1->Set(DoubleSolenoid::kForward);
}
void ShifterSystem::ShiftDown(){
	doubleSolenoid1->Set(DoubleSolenoid::kReverse);
}
void ShifterSystem::Compress() {
	//armCompressor->CheckDigitalChannel(1);
	shifterCompressor->Start();
}
