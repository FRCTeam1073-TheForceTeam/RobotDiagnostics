/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */
#include "Launcher.h"
#include "../Robotmap.h"
#include "../Commands/compressArm.h"
Launcher::Launcher() : Subsystem("Launcher") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	armCompressor = RobotMap::launcherArmCompressor;
	launcherSolenoid = RobotMap::launcherLauncherSolenoid;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Launcher::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new compressArm());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	launcherSolenoid->Set(DoubleSolenoid::kOff);
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void Launcher::Compress() {
	//armCompressor->CheckDigitalChannel(1);
	armCompressor->Start();
}
void Launcher::Launch(){
	armCompressor->Stop();
	launcherSolenoid->Set(DoubleSolenoid::kForward);
	Wait(3.0);
	launcherSolenoid->Set(DoubleSolenoid::kOff);
	armCompressor->Start();
}
void Launcher::DeCompress(){
	armCompressor->Stop();
	launcherSolenoid->Set(DoubleSolenoid::kReverse);
	Wait(3.0);
	launcherSolenoid->Set(DoubleSolenoid::kForward);
	Wait(3.0);
	launcherSolenoid->Set(DoubleSolenoid::kOff);
}
float Launcher::GetPSI(){
	float pressure=armCompressor->GetPressureSwitchValue();
	SmartDashboard::PutNumber("Pressure",pressure);
	return pressure;
}
