// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AngleDown.h"
#include "Commands/AngleUp.h"
#include "Commands/ArcadeDrive.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/CollectFaster.h"
#include "Commands/CollectSlower.h"
#include "Commands/CollectorSensors.h"
#include "Commands/DriveEncoders.h"
#include "Commands/RandomArcadeDrive.h"
#include "Commands/ShootDriveDown.h"
#include "Commands/ShootDriveUp.h"
#include "Commands/ShooterSensors.h"
#include "Commands/report_gyro.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	joystick = new Joystick(1);
	
	collectSlow = new JoystickButton(joystick, 11);
	collectSlow->WhenPressed(new CollectSlower());
	collectFast = new JoystickButton(joystick, 12);
	collectFast->WhenPressed(new CollectFaster());
	shooterAngleDown = new JoystickButton(joystick, 7);
	shooterAngleDown->WhenPressed(new AngleDown());
	shooterAngleUp = new JoystickButton(joystick, 8);
	shooterAngleUp->WhenPressed(new AngleUp());
	shooterDown = new JoystickButton(joystick, 3);
	shooterDown->WhenPressed(new ShootDriveDown());
	shooterUp = new JoystickButton(joystick, 5);
	shooterUp->WhenPressed(new ShootDriveUp());
	NetworkButton = new JoystickButton(joystick, 1);
	NetworkButton->WhenPressed(new DriveEncoders());
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
	SmartDashboard::PutData("Arcade Drive", new ArcadeDrive());
	SmartDashboard::PutData("Random Arcade Drive", new RandomArcadeDrive());
	SmartDashboard::PutData("report_gyro", new report_gyro());
	SmartDashboard::PutData("DriveEncoders", new DriveEncoders());
	SmartDashboard::PutData("ShooterSensors", new ShooterSensors());
	SmartDashboard::PutData("CollectorSensors", new CollectorSensors());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getJoystick() {
	return joystick;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
